version: "3.8"
services:
  postgresdb:
    image: postgres:16
    container_name: postgresdb
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mydb
    ports:
      - "15432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  init-db:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: init-db
    environment:
      PYTHONPATH: /app
      DB_USER: postgres
      DB_PASSWORD: password
      DB_HOST: postgresdb
      DB_PORT: 5432
      DB_NAME: mydb
    working_dir: /app
    volumes:
      - ./backend:/app
    command: bash -c "PYTHONPATH=/app python src/db/define_tables.py"
    depends_on:
      postgresdb:
        condition: service_healthy
  fastapi:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastapi
    environment:
      PYTHONPATH: /app
      DB_USER: postgres
      DB_PASSWORD: password
      DB_HOST: postgresdb
      DB_PORT: 5432
      DB_NAME: mydb
      OLLAMA_BASE_URL: http://default-litellm-service:4000/
      LOG_LEVEL: DEBUG
    working_dir: /app
    volumes:
      - ./backend:/app
    command: bash -c "PYTHONPATH=/app uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"
    depends_on:
      postgresdb:
        condition: service_healthy
      init-db:
        condition: service_completed_successfully
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    working_dir: /app
    volumes:
      - ./frontend/app:/app
      - node_modules:/app/node_modules
    ports:
      - "5173:5173"
    command: bash -c "npm run dev -- --host"
    depends_on:
      - fastapi

volumes:
  postgres_data:
  node_modules:
